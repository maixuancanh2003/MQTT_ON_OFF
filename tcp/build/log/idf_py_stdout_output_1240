[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
D:/ESP32_IDF/tcp/main/app_main.c: In function 'wifi_init':
D:/ESP32_IDF/tcp/main/app_main.c:95:62: warning: passing argument 3 of 'esp_event_handler_register' from incompatible pointer type [-Wincompatible-pointer-types]
   95 |     esp_event_handler_register(WIFI_EVENT, ESP_EVENT_ANY_ID, &wifi_event_handler, NULL);
      |                                                              ^~~~~~~~~~~~~~~~~~~
      |                                                              |
      |                                                              esp_err_t (*)(void *, const char *, int32_t,  void *) {aka int (*)(void *, const char *, long int,  void *)}
In file included from D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esp_wifi/include/esp_wifi.h:56,
                 from D:/ESP32_IDF/tcp/main/app_main.c:5:
D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esp_event/include/esp_event.h:141:58: note: expected 'esp_event_handler_t' {aka 'void (*)(void *, const char *, long int,  void *)'} but argument is of type 'esp_err_t (*)(void *, const char *, int32_t,  void *)' {aka 'int (*)(void *, const char *, long int,  void *)'}
  141 |                                      esp_event_handler_t event_handler,
      |                                      ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
D:/ESP32_IDF/tcp/main/app_main.c:96:63: warning: passing argument 3 of 'esp_event_handler_register' from incompatible pointer type [-Wincompatible-pointer-types]
   96 |     esp_event_handler_register(IP_EVENT, IP_EVENT_STA_GOT_IP, &wifi_event_handler, NULL);
      |                                                               ^~~~~~~~~~~~~~~~~~~
      |                                                               |
      |                                                               esp_err_t (*)(void *, const char *, int32_t,  void *) {aka int (*)(void *, const char *, long int,  void *)}
In file included from D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esp_wifi/include/esp_wifi.h:56,
                 from D:/ESP32_IDF/tcp/main/app_main.c:5:
D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esp_event/include/esp_event.h:141:58: note: expected 'esp_event_handler_t' {aka 'void (*)(void *, const char *, long int,  void *)'} but argument is of type 'esp_err_t (*)(void *, const char *, int32_t,  void *)' {aka 'int (*)(void *, const char *, long int,  void *)'}
  141 |                                      esp_event_handler_t event_handler,
      |                                      ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
D:/ESP32_IDF/tcp/main/app_main.c: In function 'Publisher_Task':
D:/ESP32_IDF/tcp/main/app_main.c:184:20: warning: initializer-string for array of 'char' is too long
  184 |   char string[9] = "{SENSOR : %d},sensor";
      |                    ^~~~~~~~~~~~~~~~~~~~~~
D:/ESP32_IDF/tcp/main/app_main.c:183:7: warning: unused variable 'sensor' [-Wunused-variable]
  183 | { int sensor = 1023 ;
      |       ^~~~~~
[2/10] Linking C static library esp-idf\main\libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ESP32_IDF\tcp\build\bootloader\esp-idf\esptool_py && D:\ESP32_IDF\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/ESP32_IDF/tcp/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable mqtt_tcp.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/ESP32_IDF/tcp/build/mqtt_tcp.bin
[7/8] cmd.exe /C "cd /D D:\ESP32_IDF\tcp\build\esp-idf\esptool_py && D:\ESP32_IDF\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ESP32_IDF/tcp/build/partition_table/partition-table.bin D:/ESP32_IDF/tcp/build/mqtt_tcp.bin"
mqtt_tcp.bin binary size 0xcfd30 bytes. Smallest app partition is 0x100000 bytes. 0x302d0 bytes (19%) free.
[7/8] cmd.exe /C "cd /D D:\ESP32_IDF\Espressif\frameworks\esp-idf-v5.0.2\components\esptool_py && D:\ESP32_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=D:/ESP32_IDF/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/ESP32_IDF/tcp/build -P D:/ESP32_IDF/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM20 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 mqtt_tcp.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM20
Connecting..............
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 08:3a:f2:73:10:80
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000dffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16452...
Writing at 0x00001000... (50 %)
Writing at 0x000076ae... (100 %)
Wrote 26384 bytes (16452 compressed) at 0x00001000 in 0.9 seconds (effective 234.7 kbit/s)...
Hash of data verified.
Compressed 851248 bytes to 545383...
Writing at 0x00010000... (2 %)
Writing at 0x0001c9a8... (5 %)
Writing at 0x00023272... (8 %)
Writing at 0x0002911a... (11 %)
Writing at 0x00034a2d... (14 %)
Writing at 0x0003c28b... (17 %)
Writing at 0x00041e9b... (20 %)
Writing at 0x000478c9... (23 %)
Writing at 0x0004d247... (26 %)
Writing at 0x00052c13... (29 %)
Writing at 0x00058685... (32 %)
Writing at 0x0005df27... (35 %)
Writing at 0x0006463b... (38 %)
Writing at 0x0006a268... (41 %)
Writing at 0x0006fccf... (44 %)
Writing at 0x000750cc... (47 %)
Writing at 0x0007a3a4... (50 %)
Writing at 0x0007f7be... (52 %)
Writing at 0x00084c48... (55 %)
Writing at 0x0008a23d... (58 %)
Writing at 0x0008fad0... (61 %)
Writing at 0x000959aa... (64 %)
Writing at 0x0009afc9... (67 %)
Writing at 0x000a06df... (70 %)
Writing at 0x000a5ee3... (73 %)
Writing at 0x000ab8f3... (76 %)
Writing at 0x000b1079... (79 %)
Writing at 0x000b6ba2... (82 %)
Writing at 0x000bc651... (85 %)
Writing at 0x000c37d7... (88 %)
Writing at 0x000cd368... (91 %)
Writing at 0x000d3336... (94 %)
Writing at 0x000d8f55... (97 %)
Writing at 0x000de109... (100 %)
Wrote 851248 bytes (545383 compressed) at 0x00010000 in 12.6 seconds (effective 541.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 292.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
